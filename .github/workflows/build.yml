name: build 
on:
  push:
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - "NOTICE"
      - ".gitignore"
    tags:
      - "*"
  workflow_dispatch:

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.VERSION }}
    steps:
      - name: Extract version from tag
        id: extract_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

  build-msvc:
    runs-on: windows-latest
    needs: set-version
    env:
      VERSION: ${{ needs.set-version.outputs.version }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          ref: release/${{ env.VERSION }}

      - name: Set up MSVC environment
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -find "VC\Auxiliary\Build\vcvars64.bat" | ForEach-Object { & $_ }
      
      - name: Build FFmpeg with MSVC
        shell: bash
        run: |
          ./configure --toolchain=msvc --arch=x86_64 --prefix=$(pwd)/build_output --extra-cflags="-DLIBTWOLAME_STATIC" --disable-programs --disable-doc --disable-network --disable-everything --enable-protocol=file --enable-decoder=h264 --enable-parser=h264 --enable-demuxer=h264 --enable-muxer=mp4 --enable-pic
          make -j$(nproc)
          make install

      - name: Prepare for artifact
        run: |
          mkdir -p artifacts/lib
          mkdir -p artifacts/include
          mv build_output/lib/avcodec.lib artifacts/lib/
          mv build_output/lib/avformat.lib artifacts/lib/
          mv build_output/lib/avutil.lib artifacts/lib/
          mv build_output/include/libavcodec artifacts/include/
          mv build_output/include/libavformat artifacts/include/
          mv build_output/include/libavutil artifacts/include/
          tar -czvf ffmpeg.windows-msvc.tar.gz artifacts

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg.windows-msvc.tar.gz
          path: ffmpeg.windows-msvc.tar.gz

  create-release:
    name: Create Release
    if: contains(github.ref, 'tags/v')
    needs:
      - build-msvc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/download
        with:
          platform: windows-x86_64
      - name: Env to output
        run: |
          echo "package_paths<<EOF" >> $GITHUB_OUTPUT
          cat package_paths.env >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        id: env
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.env.outputs.package_paths }}
